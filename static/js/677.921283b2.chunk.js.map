{"version":3,"file":"static/js/677.921283b2.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/animation/animation-controls.mjs","../node_modules/framer-motion/dist/es/animation/use-animation.mjs","components/Dice.js","../node_modules/@chakra-ui/layout/src/box.tsx"],"sourcesContent":["import { __spreadArray, __read } from 'tslib';\nimport { invariant } from 'hey-listen';\nimport { stopAnimation, animateVisualElement } from '../render/utils/animation.mjs';\nimport { setValues } from '../render/utils/setters.mjs';\n\n/**\n * @public\n */\nfunction animationControls() {\n    /**\n     * Track whether the host component has mounted.\n     */\n    var hasMounted = false;\n    /**\n     * Pending animations that are started before a component is mounted.\n     * TODO: Remove this as animations should only run in effects\n     */\n    var pendingAnimations = [];\n    /**\n     * A collection of linked component animation controls.\n     */\n    var subscribers = new Set();\n    var controls = {\n        subscribe: function (visualElement) {\n            subscribers.add(visualElement);\n            return function () { return void subscribers.delete(visualElement); };\n        },\n        start: function (definition, transitionOverride) {\n            /**\n             * TODO: We only perform this hasMounted check because in Framer we used to\n             * encourage the ability to start an animation within the render phase. This\n             * isn't behaviour concurrent-safe so when we make Framer concurrent-safe\n             * we can ditch this.\n             */\n            if (hasMounted) {\n                var animations_1 = [];\n                subscribers.forEach(function (visualElement) {\n                    animations_1.push(animateVisualElement(visualElement, definition, {\n                        transitionOverride: transitionOverride,\n                    }));\n                });\n                return Promise.all(animations_1);\n            }\n            else {\n                return new Promise(function (resolve) {\n                    pendingAnimations.push({\n                        animation: [definition, transitionOverride],\n                        resolve: resolve,\n                    });\n                });\n            }\n        },\n        set: function (definition) {\n            invariant(hasMounted, \"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n            return subscribers.forEach(function (visualElement) {\n                setValues(visualElement, definition);\n            });\n        },\n        stop: function () {\n            subscribers.forEach(function (visualElement) {\n                stopAnimation(visualElement);\n            });\n        },\n        mount: function () {\n            hasMounted = true;\n            pendingAnimations.forEach(function (_a) {\n                var animation = _a.animation, resolve = _a.resolve;\n                controls.start.apply(controls, __spreadArray([], __read(animation), false)).then(resolve);\n            });\n            return function () {\n                hasMounted = false;\n                controls.stop();\n            };\n        },\n    };\n    return controls;\n}\n\nexport { animationControls };\n","import { animationControls } from './animation-controls.mjs';\nimport { useEffect } from 'react';\nimport { useConstant } from '../utils/use-constant.mjs';\n\n/**\n * Creates `AnimationControls`, which can be used to manually start, stop\n * and sequence animations on one or more components.\n *\n * The returned `AnimationControls` should be passed to the `animate` property\n * of the components you want to animate.\n *\n * These components can then be animated with the `start` method.\n *\n * ```jsx\n * import * as React from 'react'\n * import { motion, useAnimation } from 'framer-motion'\n *\n * export function MyComponent(props) {\n *    const controls = useAnimation()\n *\n *    controls.start({\n *        x: 100,\n *        transition: { duration: 0.5 },\n *    })\n *\n *    return <motion.div animate={controls} />\n * }\n * ```\n *\n * @returns Animation controller with `start` and `stop` methods\n *\n * @public\n */\nfunction useAnimationControls() {\n    var controls = useConstant(animationControls);\n    useEffect(controls.mount, []);\n    return controls;\n}\nvar useAnimation = useAnimationControls;\n\nexport { useAnimation, useAnimationControls };\n","import React, { useState, useRef } from 'react';\r\nimport { Box, useColorMode } from '@chakra-ui/react';\r\nimport { motion, useAnimation } from 'framer-motion';\r\n\r\nexport default function Animation() {\r\n  const { colorMode } = useColorMode();\r\n  const isDark = colorMode === 'dark';\r\n  const controls = useAnimation();\r\n  const [isRolling, setIsRolling] = useState(false);\r\n  const dragStartY = useRef(0);\r\n  const dragStartX = useRef(0);\r\n\r\n  const containerStyle = {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n    minHeight: '40vh',\r\n    perspective: '1000px',\r\n    cursor: 'grab',\r\n  };\r\n\r\n  const handleDragStart = (event, info) => {\r\n    if (isRolling) return;\r\n    dragStartY.current = info.point.y;\r\n    dragStartX.current = info.point.x;\r\n  };\r\n\r\n  const handleDragEnd = async (event, info) => {\r\n    if (isRolling) return;\r\n    setIsRolling(true);\r\n\r\n    const throwForceY = (dragStartY.current - info.point.y) * 2;\r\n    const throwForceX = (dragStartX.current - info.point.x) * 2;\r\n    \r\n    const baseRotations = 720;\r\n    const rotationsX = baseRotations + Math.round((throwForceY / 100) * 360);\r\n    const rotationsY = baseRotations + Math.round((throwForceX / 100) * 360);\r\n\r\n    await controls.start({\r\n      rotateX: rotationsX,\r\n      rotateY: rotationsY,\r\n      transition: {\r\n        duration: 6,\r\n        ease: [0.32, 0.72, 0.35, 0.98],\r\n        type: \"tween\"\r\n      }\r\n    }).then(() => {\r\n      controls.start({\r\n        rotateX: Math.round(rotationsX / 90) * 90,\r\n        rotateY: Math.round(rotationsY / 90) * 90,\r\n        transition: {\r\n          duration: 0.3,\r\n          type: \"spring\",\r\n          stiffness: 200,\r\n          damping: 20\r\n        }\r\n      });\r\n    });\r\n\r\n    setIsRolling(false);\r\n  };\r\n\r\n  const faces = [\r\n    { rotateY: 0, dots: [[50, 50]] },\r\n    { rotateY: 180, dots: [[30, 30], [70, 70]] },\r\n    { rotateY: 90, dots: [[30, 30], [50, 50], [70, 70]] },\r\n    { rotateY: -90, dots: [[30, 30], [30, 70], [70, 30], [70, 70]] },\r\n    { rotateX: 90, dots: [[30, 30], [30, 70], [50, 50], [70, 30], [70, 70]] },\r\n    { rotateX: -90, dots: [[30, 30], [30, 50], [30, 70], [70, 30], [70, 50], [70, 70]] },\r\n  ];\r\n\r\n  return (\r\n    <Box sx={containerStyle}>\r\n      <motion.div\r\n        animate={controls}\r\n        drag\r\n        dragConstraints={{ top: 0, right: 0, bottom: 0, left: 0 }}\r\n        dragElastic={0.7}\r\n        onDragStart={handleDragStart}\r\n        onDragEnd={handleDragEnd}\r\n        style={{\r\n          width: '150px',\r\n          height: '150px',\r\n          position: 'relative',\r\n          transformStyle: 'preserve-3d',\r\n        }}\r\n        whileHover={{ scale: 1.1 }}\r\n        whileDrag={{ scale: 1.1, cursor: 'grabbing' }}\r\n      >\r\n        {faces.map((face, index) => (\r\n          <Box\r\n            key={index}\r\n            as={motion.div}\r\n            position=\"absolute\"\r\n            width=\"100%\"\r\n            height=\"100%\"\r\n            background={isDark \r\n              ? 'linear-gradient(135deg, #2D3748 0%, #1A202C 100%)' \r\n              : '#FFFFFF'}\r\n            boxShadow={isDark \r\n              ? '0 0 20px rgba(66, 153, 225, 0.15)' \r\n              : '0 0 10px rgba(0, 0, 0, 0.1)'}\r\n            borderRadius=\"20px\"\r\n            border={isDark \r\n              ? '2px solid rgba(66, 153, 225, 0.3)' \r\n              : '2px solid rgba(0, 0, 0, 0.2)'}\r\n            style={{\r\n              transform: `${face.rotateY ? `rotateY(${face.rotateY}deg)` : ''} \r\n                         ${face.rotateX ? `rotateX(${face.rotateX}deg)` : ''} \r\n                         translateZ(75px)`,\r\n              backfaceVisibility: 'hidden',\r\n              transformOrigin: 'center center',\r\n              backgroundColor: isDark ? '#1A202C' : '#FFFFFF',\r\n              backgroundImage: isDark \r\n                ? 'linear-gradient(135deg, #2D3748 0%, #1A202C 100%)' \r\n                : 'none',\r\n              WebkitBackfaceVisibility: 'hidden',\r\n              MozBackfaceVisibility: 'hidden',\r\n            }}\r\n            _before={{\r\n              content: '\"\"',\r\n              position: 'absolute',\r\n              top: 0,\r\n              left: 0,\r\n              right: 0,\r\n              bottom: 0,\r\n              borderRadius: '20px',\r\n              background: isDark ? '#1A202C' : '#FFFFFF',\r\n              zIndex: -1,\r\n            }}\r\n          >\r\n            {face.dots.map((dot, i) => (\r\n              <Box\r\n                key={i}\r\n                position=\"absolute\"\r\n                left={`${dot[0]}%`}\r\n                top={`${dot[1]}%`}\r\n                transform=\"translate(-50%, -50%)\"\r\n                width=\"20px\"\r\n                height=\"20px\"\r\n                borderRadius=\"50%\"\r\n                bg={isDark ? '#63B3ED' : 'black'}\r\n                boxShadow={isDark \r\n                  ? '0 0 10px rgba(99, 179, 237, 0.5)' \r\n                  : 'none'}\r\n              />\r\n            ))}\r\n          </Box>\r\n        ))}\r\n      </motion.div>\r\n    </Box>\r\n  );\r\n}","import {\n  chakra,\n  forwardRef,\n  SystemStyleObject,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\n\nexport interface BoxProps extends HTMLChakraProps<\"div\"> {}\n\n/**\n * Box is the most abstract component on top of which other chakra\n * components are built. It renders a `div` element by default.\n *\n * @see Docs https://chakra-ui.com/box\n */\nexport const Box = chakra(\"div\")\n\nBox.displayName = \"Box\"\n\n/**\n * As a constraint, you can't pass size related props\n * Only `size` would be allowed\n */\ntype Omitted = \"size\" | \"boxSize\" | \"width\" | \"height\" | \"w\" | \"h\"\n\nexport interface SquareProps extends Omit<BoxProps, Omitted> {\n  /**\n   * The size (width and height) of the square\n   */\n  size?: BoxProps[\"width\"]\n  /**\n   * If `true`, the content will be centered in the square\n   *\n   * @default false\n   */\n  centerContent?: boolean\n}\n\nexport const Square = forwardRef<SquareProps, \"div\">(function Square(\n  props,\n  ref,\n) {\n  const { size, centerContent = true, ...rest } = props\n\n  const styles: SystemStyleObject = centerContent\n    ? { display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }\n    : {}\n\n  return (\n    <Box\n      ref={ref}\n      boxSize={size}\n      __css={{\n        ...styles,\n        flexShrink: 0,\n        flexGrow: 0,\n      }}\n      {...rest}\n    />\n  )\n})\n\nSquare.displayName = \"Square\"\n\nexport const Circle = forwardRef<SquareProps, \"div\">(function Circle(\n  props,\n  ref,\n) {\n  const { size, ...rest } = props\n  return <Square size={size} ref={ref} borderRadius=\"9999px\" {...rest} />\n})\n\nCircle.displayName = \"Circle\"\n"],"names":["animationControls","hasMounted","pendingAnimations","subscribers","Set","controls","subscribe","visualElement","add","delete","start","definition","transitionOverride","animations_1","forEach","push","animateVisualElement","Promise","all","resolve","animation","set","invariant","setValues","stop","stopAnimation","mount","_a","apply","__spreadArray","__read","then","useAnimation","useConstant","useEffect","Animation","colorMode","useColorMode","isDark","isRolling","setIsRolling","useState","dragStartY","useRef","dragStartX","_jsx","Box","sx","display","justifyContent","alignItems","width","minHeight","perspective","cursor","children","motion","div","animate","drag","dragConstraints","top","right","bottom","left","dragElastic","onDragStart","handleDragStart","event","info","current","point","y","x","onDragEnd","async","throwForceY","throwForceX","rotationsX","Math","round","rotationsY","rotateX","rotateY","transition","duration","ease","type","stiffness","damping","style","height","position","transformStyle","whileHover","scale","whileDrag","dots","map","face","index","as","background","boxShadow","borderRadius","border","transform","concat","backfaceVisibility","transformOrigin","backgroundColor","backgroundImage","WebkitBackfaceVisibility","MozBackfaceVisibility","_before","content","zIndex","dot","i","bg","chakra","displayName","Square","forwardRef","props","ref","size","centerContent","rest","styles","jsx","boxSize","__css","flexShrink","flexGrow","Circle"],"sourceRoot":""}